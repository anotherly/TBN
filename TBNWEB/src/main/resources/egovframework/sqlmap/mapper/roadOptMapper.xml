<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.wizbrain.tbn.option.mapper.RoadOptMapper">
<!-- 
수정일           수정자         수정내용 
========= ======= ================================================= 
2020.07.23 정다빈     최초 생성 
-->
	
	<!-- #############통신원 유형################ -->
		
	<!-- 통신원유형 대 -->
	<resultMap type="optRoadVo" id="selectRoadOpt">
		<result property="areaCode" column="AREA_CODE"/>
		<result property="areaName" column="AREA_NAME"/>
	</resultMap>
	<select id="selectRoadOpt1" parameterType="optRoadVo" resultMap="selectRoadOpt">
		select * from CODE_AREACODE 
		WHERE 1=1
		<if test="areaCode != null">
			AND AREA_CODE=#{areaCode}
		</if>
		order by idx asc
	</select>
	
	<!-- 통신원유형 중 -->
	<resultMap type="optRoadVo" id="selectRoadOpt2">
		<result property="areaCode" column="AREA_CODE"/>
		<result property="arteryId" column="ARTERY_ID"/>
		<result property="arteryName" column="ARTERY_NAME"/>
	</resultMap>
	<select id="selectRoadOpt2" parameterType="optRoadVo" resultMap="selectRoadOpt2">
		select AREA_CODE,ARTERY_ID,ARTERY_NAME
		from code_artery 
		WHERE 1=1
		<if test="areaCode != null">
			AND AREA_CODE=#{areaCode}
		</if>
		order by TO_NUMBER(SUBSTR(artery_id,2,length(artery_id)))
	</select>
	
	<!-- 통신원유형 소 -->
	<resultMap type="optRoadVo" id="selectRoadOpt3">
		<result property="arteryId" column="ARTERY_ID"/>
		<result property="seqNo" column="SEQ_NO"/>
		<result property="nodelinkId" column="NODELINK_ID"/>
		<result property="lNodeName" column="L_NODE_NAME"/>
		<result property="rNodeName" column="R_NODE_NAME"/>
	</resultMap>
	<select id="selectRoadOpt3" parameterType="optRoadVo" resultMap="selectRoadOpt3">
		select * from CODE_NODELINK
		where 1=1
		<if test="arteryId != null">
			and ARTERY_ID=#{arteryId}
		</if>
		order by TO_NUMBER(SEQ_NO)
	</select>
	
	<!-- 통신원유형 등록 대 -->
	<insert id="insertRoadOpt1" parameterType="optRoadVo">
		INSERT INTO CODE_AREACODE(
			 AREA_CODE
			,AREA_NAME
		)
		VALUES (
			 (select NVL(max(TO_NUMBER(AREA_CODE))+10,0) from  CODE_AREACODE)
			,#{areaName}
		)
	</insert>
	
	<!-- 통신원유형 등록 중 -->
	<insert id="insertRoadOpt2" parameterType="optRoadVo">
		INSERT INTO CODE_ARTERY(
			 ARTERY_ID
			,ARTERY_NAME
			,AREA_CODE
		)
		VALUES(
			(
				SELECT 
			        (SELECT AREA_DIV FROM CODE_AREACODE WHERE area_code=#{areaCode})
			        ||
			        (
					select
					    case when length(a.tt)>2 then to_char(a.tt)
					    else lpad(a.tt,3,'0') end as ttt
					from 
					    (
                            SELECT 
                            NVL(
                                (SELECT 
                                MAX(nvl(to_number(SUBSTR(ARTERY_ID,2,length(ARTERY_ID))),1))+1
                                from CODE_ARTERY WHERE AREA_CODE=#{areaCode})
                            ,1) 
                            tt FROM DUAL
						) a
					)
				FROM DUAL
			)
			,#{arteryName}
			,#{areaCode}
		)
	</insert>
	
		<!-- 통신원유형 등록 소 -->
	<insert id="insertRoadOpt3" parameterType="optInftVo">
		INSERT INTO CODE_NODELINK(
			 ARTERY_ID
			,SEQ_NO
			,L_NODE_NAME
			,R_NODE_NAME
			,NODELINK_ID
		)
		VALUES(
			#{arteryId}
			,(select max(to_number(seq_no))+1 from CODE_NODELINK where ARTERY_ID=#{arteryId})
			,#{lNodeName}
			,#{lNodeName}
			,(select max(to_number(NODELINK_ID))+1 from CODE_NODELINK)
		)
	</insert>
	
	<!-- 통신원유형 수정 대 -->
	<update useGeneratedKeys="false" id="updateRoadOpt1" parameterType="optRoadVo">
		UPDATE CODE_AREACODE
		SET
		<if test="areaName != null">
			AREA_NAME=#{areaName}
		</if>
		WHERE AREA_CODE=#{areaCode}
	</update>
	
	<!-- 통신원유형 수정 중 -->
	<update useGeneratedKeys="false" id="updateRoadOpt2" parameterType="optRoadVo">
		UPDATE CODE_ARTERY
		SET
		<if test="arteryName != null">
			ARTERY_NAME=#{arteryName}
		</if>
		WHERE 1=1
		<if test="arteryId != null">
			AND ARTERY_ID=#{arteryId}
		</if>
	</update>
	
	
	<!-- 통신원유형 수정 소 -->
	<update useGeneratedKeys="false" id="updateRoadOpt3" parameterType="optInftVo">
		UPDATE CODE_NODELINK
		SET
		<if test="lNodeName != null">
			L_NODE_NAME=#{lNodeName}
			,R_NODE_NAME=#{lNodeName}
		</if>
		WHERE 1=1
		<if test="arteryId != null">
			and ARTERY_ID=#{arteryId}
		</if>
		<if test="nodelinkId != null">
			and NODELINK_ID=#{nodelinkId}
		</if>
	</update>
	
	<!-- 통신원유형 삭제 대-->
	<delete id="deleteRoadOpt1">
		DELETE FROM CODE_AREACODE 
	        where AREA_CODE in
			<foreach collection="chkArr" item="item" index="index" separator="," open="(" close=")">
				#{item}
	        </foreach>
	</delete>
	
	<!-- 통신원유형 삭제 중-->
	<delete id="deleteRoadOpt2">
		DELETE FROM CODE_ARTERY
	        where 1=1
	        <choose>
			    <when test="cdFlag == 1">
			        AND AREA_CODE in
					<foreach collection="chkArr" item="item" index="index" separator="," open="(" close=")">
						#{item}
			        </foreach> 
			    </when>
			    <otherwise>
			        AND AREA_CODE=#{pCode}
			        AND ARTERY_ID IN
					<foreach collection="chkArr" item="item" index="index" separator="," open="(" close=")">
						#{item}
			        </foreach>			        
			    </otherwise>
			</choose> 
	</delete>
	
		<!-- 통신원유형 삭제 소-->
	<delete id="deleteRoadOpt3">
		DELETE FROM CODE_NODELINK
			where 1=1
			<choose>
			    <when test="cdFlag == 1">
			        AND AREA_CODE in
					<foreach collection="chkArr" item="item" index="index" separator="," open="(" close=")">
						#{item}
			        </foreach>			        
			    </when>
			    <when test="cdFlag == 2">
			        AND ARTERY_ID IN
					<foreach collection="chkArr" item="item" index="index" separator="," open="(" close=")">
						#{item}
			        </foreach>
			    </when>
				<otherwise>
					AND  ARTERY_ID=#{pCode2}
			        AND NODELINK_ID IN
					<foreach collection="chkArr" item="item" index="index" separator="," open="(" close=")">
						#{item}
			        </foreach>
				</otherwise>  
			</choose>
	</delete>
</mapper>