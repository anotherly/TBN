<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.wizbrain.tbn.mileage.mapper.MileageMapper">

	<!-- 굿 제보 마일리지 조회 -->
	<select id="mileList" parameterType="kr.co.wizbrain.tbn.mileage.vo.MileageVO" resultType="java.util.Map">
	    
	    SELECT 
		    j1.*,
		    NVL(bf.before_point, 0) AS before_point,
		    RECEIPT_POINT + DISASTOR_POINT + VIDEO_POINT + NVL(bf.before_point, 0) - minus_point  AS ALL_POINT,
		    RANK() OVER (ORDER BY RECEIPT_POINT + DISASTOR_POINT + VIDEO_POINT + NVL(bf.before_point, 0)  - minus_point DESC) AS RANKING
		FROM (
		    SELECT 
		        a.INFORMER_ID,
		        nvl(a.act_id,'없음') as act_id,
		        a.informer_name,
		        a.phone_cell,
		        nw.*
		    FROM
		        (SELECT * FROM informer WHERE area_code = #{searchAreaCode}) a
		        INNER JOIN (
		            SELECT 
		                informer_id AS id1,
		                nvl(2*sum(receipt_score),0) AS RECEIPT_POINT,
		                nvl(5*sum(disastor_score),0) AS DISASTOR_POINT,
		                nvl(5*sum(video_score),0) AS VIDEO_POINT,
                        nvl(5*sum(minus_score),0) as minus_point
		            FROM mileage_info 
		            WHERE reg_date between #{stdt} and #{edt} 
		            GROUP BY informer_id
		        ) nw
		        ON a.informer_id = nw.id1
		) j1
		LEFT JOIN (
		    SELECT 
		        informer_id AS id2,
		        sum(receipt_score) AS BEFORE_POINT
		    FROM mileage_info
		    WHERE reg_date BETWEEN 
		        TRUNC(TO_DATE(#{stdt}, 'YYYY-MM-DD') - INTERVAL '1' MONTH, 'MM') 
		        AND
		        LAST_DAY(TO_DATE(#{stdt}, 'YYYY-MM-DD') - INTERVAL '1' MONTH)
		    GROUP BY informer_id
		) bf
		ON j1.informer_id = bf.id2
	    
	</select>
	

	<!-- 우수 통신원 조회 -->
	<select id="excellenceList" parameterType="kr.co.wizbrain.tbn.mileage.vo.MileageVO" resultType="java.util.Map">
		
		SELECT 
		    j1.*,
		    NVL(bf.before_point, 0) AS before_point,
		    RECEIPT_POINT + DISASTOR_POINT + VIDEO_POINT + NVL(bf.before_point, 0) - minus_point  AS ALL_POINT,
		    RANK() OVER (ORDER BY RECEIPT_POINT + DISASTOR_POINT + VIDEO_POINT + NVL(bf.before_point, 0)  - minus_point DESC) AS RANKING
		FROM (
		    SELECT 
		        a.INFORMER_ID,
		        nvl(a.act_id,'없음') as act_id,
		        a.informer_name,
		        a.phone_cell,
		        nw.*
		    FROM
		        (SELECT * FROM informer WHERE area_code = #{searchAreaCode}) a
		        INNER JOIN (
		            SELECT 
		                informer_id AS id1,
		                nvl(2*sum(receipt_score),0) AS RECEIPT_POINT,
		                nvl(5*sum(disastor_score),0) AS DISASTOR_POINT,
		                nvl(5*sum(video_score),0) AS VIDEO_POINT,
                        nvl(5*sum(minus_score),0) as minus_point
		            FROM mileage_info 
		            WHERE reg_date 
		            between TO_DATE(#{standardDate} || '-01', 'YYYY-MM-DD')
					AND LAST_DAY(TO_DATE(#{standardDate} || '-01', 'YYYY-MM-DD'))
		            GROUP BY informer_id
		        ) nw
		        ON a.informer_id = nw.id1
		) j1
		LEFT JOIN (
		    SELECT 
		        informer_id AS id2,
		        sum(receipt_score) AS BEFORE_POINT
		    FROM mileage_info
		    WHERE reg_date 
		        BETWEEN
		        TRUNC(TO_DATE(#{standardDate} || '-01', 'YYYY-MM-DD') - INTERVAL '1' MONTH, 'MM') 
		        AND
		        LAST_DAY(TO_DATE(#{standardDate} || '-01', 'YYYY-MM-DD') - INTERVAL '1' MONTH)
		    GROUP BY informer_id
		) bf
		ON j1.informer_id = bf.id2
		where INFORMER_ID not in 
		(
		select informer_id from award_mileage 
		where AREA_CODE = #{searchAreaCode}
		AND key_mon between
		to_char(trunc(TO_DATE(#{standardDate} || '-01', 'YYYY-MM-DD') - INTERVAL '2' MONTH, 'MM') ,'YYYY-MM')
		and
		to_char(trunc(TO_DATE(#{standardDate} || '-01', 'YYYY-MM-DD') - INTERVAL '1' MONTH, 'MM') ,'YYYY-MM')
		)
		
	</select>

	
	<!--  시상별 배점 갱신  -->
	<update id="updateGrade" parameterType="awardVo"> 
		UPDATE EXCELLENCE_GRADE SET ALL_PER=#{ALL_PER} ,MAIN_PER=#{MAIN_PER} ,ADD_PER=#{ADD_PER} WHERE AREA_CODE=#{AREA_CODE} 
	</update>
	
	
	<!--  종류에 따른 시상대상자 조회  -->
	<select id="getExcellInformerList" parameterType="awardVo" resultType="awardVo">
	    with mntb as (
	        select ind_id, 
	        	   ind_type as ind_type2,area_code as area_code2,
	               sum(mon_cnt) as mon_cnt, 
	               sum(main_cnt) as main_cnt, 
	               sum(add_cnt) as add_cnt
	        from stat_tbn_monrpt 
	        where stat_mon between #{SDATE} and #{EDATE} 
	          and ind_type IN ('1','2','5','6','7','999')
	          and area_code=#{AREA_CODE} 
	          and ind_id not in (
	            select informer_id 
	            from excellence_info 
	            where sdate=#{SDATE} 
	              and edate=#{EDATE} 
	              and aw_type=#{searchType} 
	              and area_code=#{AREA_CODE}
	        ) 
	        group by ind_id,ind_type,area_code
	    ), agp as (
	        select * 
	        from excellence_grade 
	        where area_code=#{AREA_CODE}
	    )
	    SELECT C.* 
	    FROM (
	        select
	            <choose>
	                <when test="searchType == 0"> 
	                    row_number() over(order by to_number(a.ALL_RANK) desc) as rnum 
	                </when>
	                <when test="searchType == 1"> 
	                    row_number() over(order by to_number(a.MAIN_CNT) desc) as rnum 
	                </when>
	                <otherwise> 
	                    row_number() over(order by to_number(a.ADD_CNT) desc) as rnum 
	                </otherwise>
	            </choose>
	           		,a.ind_id as informer_id,nvl(b.act_id,'없음') as act_id,nvl(b.informer_name,'미등록시민') as informer_name
		            ,a.area_code2 as area_code,b.org_id,b.org_name,a.ind_type2 as ind_type
                    ,nvl(b.phone_cell,REGEXP_REPLACE(substr(a.ind_id,5,15), '(02|.{3})(.+)(.{4})', '\1-\2-\3')) as phone_cell
		            ,a.mon_cnt,a.rpt_grade,a.main_cnt,a.main_grade,a.add_cnt,a.add_grade,a.all_rank
	        from (
	            select 
	                ind_id,
	                mon_cnt,
	                area_code2,
	                ind_type2,
	                TO_CHAR(round((mon_cnt/a1.mx_mon)* agp.ALL_PER,2), 'FM9990.00') as RPT_GRADE,
	                main_cnt,
	                TO_CHAR(round((main_cnt/a2.main_mx)* agp.MAIN_PER, 2), 'FM9990.00') as MAIN_GRADE,
	                add_cnt,
	                TO_CHAR(round((GREATEST(add_cnt, 0)/a3.add_mx)* agp.ADD_PER, 2), 'FM9990.00') as ADD_GRADE,
	                TO_CHAR(
	                    round((mon_cnt/a1.mx_mon)* agp.ALL_PER, 2) + 
	                    round((main_cnt/a2.main_mx)* agp.MAIN_PER, 2) + 
	                    round((GREATEST(add_cnt, 0)/a3.add_mx)* agp.ADD_PER, 2), 
	                    'FM9990.00'
	                ) as ALL_RANK
	            from mntb, agp
	            ,(select decode(max(mon_cnt), 0, 1, max(mon_cnt)) as mx_mon from mntb) a1,
	            (select decode(max(main_cnt), 0, 1, max(main_cnt)) as main_mx from mntb) a2,
	            (select decode(max(add_cnt), 0, 1, max(add_cnt)) as add_mx from mntb) a3
	            WHERE 1=1
	            <if test="XSDATE !=null and XSDATE neq ''">
	                and ind_id not in (
	                    select informer_id 
	                    from excellence_info 
	                    where sdate <![CDATA[ >= ]]> #{XSDATE} 
	                      and edate <![CDATA[ <= ]]> #{XEDATE} 
	                      and aw_type=#{searchType} 
	                      and area_code=#{AREA_CODE}
	                )
	            </if>
	        ) a 
	        left join (
	            select t1.*
	            ,t2.org_name as org_name
	            ,t2.ind_type as ind_type 
	            from (
	                select informer_id, act_id, informer_name, area_code, org_id, 
	                       REGEXP_REPLACE(phone_cell, '(02|.{3})(.+)(.{4})', '\1-\2-\3') as PHONE_CELL
	                from informer 
	                WHERE area_code=#{AREA_CODE}
	            ) t1 
	            left join (
	                select org_id, org_name,ind_type
	                from organization 
	                WHERE area_code=#{AREA_CODE}
	            ) t2 
	            on(t1.org_id = t2.org_id)
	        ) b 
	        on(a.ind_id = b.informer_id)
	    ) C 
	    where C.RNUM BETWEEN 1 AND #{searchNum}
		<!-- 기관(6)일 경우 가스 국토 우체국만 -->
		AND (
		        (ind_type = 6 AND (
		            org_name LIKE '%가스기술%' OR
		            org_name LIKE '%국토정보%' OR
		            org_name LIKE '%우체국물류%'
		        ))
			OR
			(C.ind_type IN ('1','2','5','6','7','999'))
		)
		order by rnum asc
	</select>
	
	
	
	<!-- 엑셀 다운로드용 시상선정기준 조회 -->
	<select id="getAwardInformerList2" parameterType="awardVo" resultType="record">
	    with mntb as (
	        select ind_id, 
	        	   ind_type as ind_type2,area_code as area_code2,
	               sum(mon_cnt) as mon_cnt, 
	               sum(main_cnt) as main_cnt, 
	               sum(add_cnt) as add_cnt
	        from stat_tbn_monrpt 
	        where stat_mon between #{SDATE} and #{EDATE} 
	          and ind_type IN ('1','2','5','6','7','999')
	          and area_code=#{AREA_CODE} 
	          and ind_id not in (
	            select informer_id 
	            from excellence_info 
	            where sdate=#{SDATE} 
	              and edate=#{EDATE} 
	              and aw_type=#{searchType} 
	              and area_code=#{AREA_CODE}
	        ) 
	        group by ind_id,ind_type,area_code
	    ), agp as (
	        select * 
	        from excellence_grade 
	        where area_code=#{AREA_CODE}
	    )
	    SELECT C.* 
	    FROM (
	        select
	            <choose>
	                <when test="searchType == 0"> 
	                    row_number() over(order by to_number(a.ALL_RANK) desc) as rnum 
	                </when>
	                <when test="searchType == 1"> 
	                    row_number() over(order by to_number(a.MAIN_CNT) desc) as rnum 
	                </when>
	                <otherwise> 
	                    row_number() over(order by to_number(a.ADD_CNT) desc) as rnum 
	                </otherwise>
	            </choose>
	           		,a.ind_id as informer_id,nvl(b.act_id,'없음') as act_id,nvl(b.informer_name,'미등록시민') as informer_name
		            ,a.area_code2 as area_code,b.org_id,b.org_name,a.ind_type2 as ind_type
                    ,nvl(b.phone_cell,REGEXP_REPLACE(substr(a.ind_id,5,15), '(02|.{3})(.+)(.{4})', '\1-\2-\3')) as phone_cell
		            ,a.mon_cnt,a.rpt_grade,a.main_cnt,a.main_grade,a.add_cnt,a.add_grade,a.all_rank
	        from (
	            select 
	                ind_id,
	                mon_cnt,
	                area_code2,
	                ind_type2,
	                TO_CHAR(round((mon_cnt/a1.mx_mon)* agp.ALL_PER,2), 'FM9990.00') as RPT_GRADE,
	                main_cnt,
	                TO_CHAR(round((main_cnt/a2.main_mx)* agp.MAIN_PER, 2), 'FM9990.00') as MAIN_GRADE,
	                add_cnt,
	                TO_CHAR(round((GREATEST(add_cnt, 0)/a3.add_mx)* agp.ADD_PER, 2), 'FM9990.00') as ADD_GRADE,
	                TO_CHAR(
	                    round((mon_cnt/a1.mx_mon)* agp.ALL_PER, 2) + 
	                    round((main_cnt/a2.main_mx)* agp.MAIN_PER, 2) + 
	                    round((GREATEST(add_cnt, 0)/a3.add_mx)* agp.ADD_PER, 2), 
	                    'FM9990.00'
	                ) as ALL_RANK
	            from mntb, agp
	            ,(select decode(max(mon_cnt), 0, 1, max(mon_cnt)) as mx_mon from mntb) a1,
	            (select decode(max(main_cnt), 0, 1, max(main_cnt)) as main_mx from mntb) a2,
	            (select decode(max(add_cnt), 0, 1, max(add_cnt)) as add_mx from mntb) a3
	            WHERE 1=1
	            <if test="XSDATE !=null and XSDATE neq ''">
	                and ind_id not in (
	                    select informer_id 
	                    from excellence_info 
	                    where sdate <![CDATA[ >= ]]> #{XSDATE} 
	                      and edate <![CDATA[ <= ]]> #{XEDATE} 
	                      and aw_type=#{searchType} 
	                      and area_code=#{AREA_CODE}
	                )
	            </if>
	        ) a 
	        left join (
	            select t1.*
	            ,t2.org_name as org_name
	            ,t2.ind_type as ind_type 
	            from (
	                select informer_id, act_id, informer_name, area_code, org_id, 
	                       REGEXP_REPLACE(phone_cell, '(02|.{3})(.+)(.{4})', '\1-\2-\3') as PHONE_CELL
	                from informer 
	                WHERE area_code=#{AREA_CODE}
	            ) t1 
	            left join (
	                select org_id, org_name,ind_type
	                from organization 
	                WHERE area_code=#{AREA_CODE}
	            ) t2 
	            on(t1.org_id = t2.org_id)
	        ) b 
	        on(a.ind_id = b.informer_id)
	    ) C 
	    where C.RNUM BETWEEN 1 AND #{searchNum}
		<!-- 기관(6)일 경우 가스 국토 우체국만 -->
		AND (
		        (ind_type = 6 AND (
		            org_name LIKE '%가스기술%' OR
		            org_name LIKE '%국토정보%' OR
		            org_name LIKE '%우체국물류%'
		        ))
			OR
			(C.ind_type IN ('1','2','5','6','7','999'))
		)
		order by rnum asc
	</select>
	
	
	
	
	<!-- 우수 제보자 > 수상자 조회 엑셀 다운로드  -->
	<select id="selectUserAwardList2" parameterType="awardVo" resultType="record">
	    SELECT 
	        ROW_NUMBER() OVER(ORDER BY B.REG_DATE DESC) RNUM, 
	        c.informer_id, 
	        E.CITY as REGION_NM, 
	        D.ORG_NAME, 
	        C.ACT_ID, 
	        C.INFORMER_NAME, 
	        DECODE(B.AW_TYPE, '0', '교통제보우수자', '1', '주요정보제공우수자', '2', '실적증가자') AS AW_TYPE, 
	        B.AW_NAME, 
	        REGEXP_REPLACE(C.PHONE_CELL, '(02|.{3})(.+)(.{4})', '\1-\2-\3') as PHONE_CELL, 
	        TO_CHAR(TO_DATE(B.REG_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') AS REG_DATE, 
	        B.RPT_GRADE, 
	        B.MAIN_GRADE, 
	        B.ADD_GRADE, 
	        B.ALL_RANK 
	    FROM EXCELLENCE_INFO B 
	    LEFT JOIN (
	        SELECT 
	            INFORMER_ID, 
	            INFORMER_NAME, 
	            AREA_CODE, 
	            ORG_ID, 
	            ACT_ID, 
	            PHONE_CELL 
	        FROM INFORMER 
	        WHERE AREA_CODE = #{AREA_CODE}
	    ) C ON(B.INFORMER_ID = C.INFORMER_ID)
	    LEFT JOIN (
	        SELECT 
	            ORG_ID, 
	            ORG_NAME, 
	            AREA_CODE 
	        FROM ORGANIZATION 
	        WHERE AREA_CODE = #{AREA_CODE}
	    ) D ON(C.ORG_ID = D.ORG_ID)
	    LEFT JOIN CODE_AREACODE E ON(B.AREA_CODE = E.AREA_CODE)
	    WHERE B.AREA_CODE = #{AREA_CODE} 
	        AND B.AW_TYPE = #{searchType} 
	        AND B.SDATE <![CDATA[ >= ]]> #{SDATE} 
	        AND B.EDATE <![CDATA[ <= ]]> #{EDATE}
	    ORDER BY ALL_RANK DESC
	</select>
	
	
	
	<!--  시상별 배점 조회  -->
	<select id="excellGrade" parameterType="OptAreaVo" resultType="awardVo">
		SELECT * FROM EXCELLENCE_GRADE
		<if test="areaCode !=null and areaCode neq ''"> WHERE AREA_CODE=#{areaCode} </if>
	</select>
	
	
	<!-- 우수 제보자 > 수상자 조회 -->
	<select id="selectUserAwardList" parameterType="awardVo" resultType="awardVo">
	    SELECT 
	        ROW_NUMBER() OVER(ORDER BY B.REG_DATE DESC) RNUM, 
	        B.AW_ID, 
	        c.informer_id, 
	        E.CITY as REGION_NM, 
	        D.ORG_NAME, 
	        C.ACT_ID, 
	        C.INFORMER_NAME, 
	        DECODE(B.AW_TYPE, '0', '교통제보우수자', '1', '주요정보제공우수자', '2', '실적증가자') AS AW_TYPE, 
	        B.AW_NAME, 
	        REGEXP_REPLACE(C.PHONE_CELL, '(02|.{3})(.+)(.{4})', '\1-\2-\3') as PHONE_CELL, 
	        TO_CHAR(TO_DATE(B.REG_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') AS REG_DATE, 
	        B.RPT_GRADE, 
	        B.MAIN_GRADE, 
	        B.ADD_GRADE, 
	        B.ALL_RANK 
	    FROM EXCELLENCE_INFO B 
	    LEFT JOIN (
	        SELECT INFORMER_ID, INFORMER_NAME, AREA_CODE, ORG_ID, ACT_ID, PHONE_CELL 
	        FROM INFORMER 
	        WHERE AREA_CODE = #{AREA_CODE}
	    ) C ON(B.INFORMER_ID = C.INFORMER_ID) 
	    LEFT JOIN (
	        SELECT ORG_ID, ORG_NAME, AREA_CODE 
	        FROM ORGANIZATION 
	        WHERE AREA_CODE = #{AREA_CODE}
	    ) D ON(C.ORG_ID = D.ORG_ID) 
	    LEFT JOIN CODE_AREACODE E ON(B.AREA_CODE = E.AREA_CODE) 
	    WHERE B.AREA_CODE = #{AREA_CODE} 
	      AND B.AW_TYPE = #{searchType} 
	      AND B.SDATE <![CDATA[ >= ]]> #{SDATE} 
	      AND B.EDATE <![CDATA[ <= ]]> #{EDATE}
	    ORDER BY ALL_RANK DESC
	</select>
	
	
	<!-- 시상 저장 -->
	<update id="saveAward">
	    INSERT INTO EXCELLENCE_INFO (
	        AW_ID, INFORMER_ID, ACT_ID, AW_TYPE, AREA_CODE, AW_NAME, 
	        AW_DATE, REG_DATE, SDATE, EDATE, RPT_GRADE, MAIN_GRADE, 
	        ADD_GRADE, ALL_RANK
	    )
	    <foreach collection="chkArr" item="item" index="i" separator="union">
	        SELECT (
	            SELECT INFORMER_ID || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') 
	            FROM DUAL
	        ), 
	        INFORMER_ID, ACT_ID, #{thvo.searchType}, AREA_CODE, #{thvo.AW_NAME}, 
	        TO_CHAR(SYSDATE, 'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMMDD'), 
	        #{thvo.SDATE}, #{thvo.EDATE}, #{item.RPT_GRADE}, 
	        #{item.MAIN_GRADE}, #{item.ADD_GRADE}, #{item.ALL_RANK}
	        FROM INFORMER 
	        WHERE INFORMER_ID = #{item.INFORMER_ID}
	    </foreach>
	</update>
	
	
	<!-- 시상 삭제 -->
	<update id="deleteAward">
	    DELETE FROM EXCELLENCE_INFO 
	    WHERE AW_ID IN
	    <foreach collection="selection" item="item" index="index" separator="," open="(" close=")">
	        #{item}
	    </foreach>
	</update>
	
	
	<!-- 최고 통신원 기본 정보 조회 -->
	<select id="bestIfrmList" resultType="java.util.Map" parameterType="kr.co.wizbrain.tbn.mileage.vo.MileageVO">
		SELECT a.*,b.cnt as ALL_POINT
		FROM 
		(
		    select t1.*,t2.city as AREA_NAME from 
		    (
		        SELECT informer_id,informer_name,area_code,org_name,reg_date
		        FROM informer
		        WHERE reg_date IS NOT NULL
		        and informer_type=0
		          AND REGEXP_LIKE(reg_date, '^\d{4}-\d{2}-\d{2}$')
		          and reg_date <![CDATA[ <= ]]> to_char(ADD_MONTHS(SYSDATE, -240),'YYYY-MM-DD')
		    )t1 
		    inner join (select * from code_areacode)t2
		    on t1.area_code=t2.area_code
		) a
		INNER JOIN (
		    SELECT individual_id,cnt
		    FROM (
		        SELECT individual_id, COUNT(*) AS cnt
		        FROM report_receipt
		        WHERE receipt_day <![CDATA[ >= ]]> ADD_MONTHS(SYSDATE, -60)
		          AND individual_id IS NOT NULL
		        GROUP BY individual_id
		    ) t
		    WHERE t.cnt <![CDATA[ >= ]]> 5000
		) b
		ON a.informer_id = b.individual_id
		order by b.cnt desc
	</select>
	
	
	<!-- 최고 통신원 전체 제보건수 조회 -->
<!-- 	<select id="bestIfrmCnt" resultType="java.util.Map">
    select individual_id as informer_id, count(*) as all_point
    from report_receiptz
    where individual_id in
    <foreach item="item" index="index" collection="bestIfrmList" open="(" separator="," close=")">
        #{item.INFORMER_ID}
    </foreach>
    group by individual_id
</select> -->
	

</mapper>