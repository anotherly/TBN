<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.co.wizbrain.tbn.notice.mapper.NoticeMapper">
	
	<!--  24-11-14 : 전체 공지사항 조회 -->
	<select id="noticeList" resultType="kr.co.wizbrain.tbn.notice.vo.NoticeVO">
		select TO_CHAR(START_DATE, 'YYYY-MM-DD HH24:MI:SS')AS START_DATE,END_DATE,NOTICE_CONTENT,
			    NOTICE_ID,NOTICE_TITLE,NOTICE_TYPE,WRITER_ID,WRITER_NAME
		from notice_info
		
		<include refid="search"></include>
		ORDER BY START_DATE DESC 
	</select>
	
	<sql id="search">
	    <!-- 조건을 하나만 추가하도록 수정, where는 한 번만 사용 -->
	        <choose>
	            <!-- 검색어와 날짜가 모두 있을 경우 -->
	            <when test="searchText != '' and searchDate != ''">
	            where
	                TO_CHAR(START_DATE, 'YY/MM') = TO_CHAR(TO_DATE(#{searchDate}, 'YYYY-MM-DD'), 'YY/MM')
	                AND (WRITER_NAME LIKE '%' || #{searchText} || '%' 
	                     OR NOTICE_TITLE LIKE '%' || #{searchText} || '%' 
	                     OR START_DATE LIKE '%' || #{searchText} || '%')
	            </when>
	            
	            <!-- 전체 검색인 경우 (키워드와 searchDate 없을 때) -->
	            <when test="searchText == '' and searchDate == ''">
	            where
	                WRITER_NAME LIKE '%' || #{searchText} || '%'
	                OR NOTICE_TITLE LIKE '%' || #{searchText} || '%'
	                OR START_DATE LIKE '%' || #{searchText} || '%'
	            </when>
	            
	            <!-- 검색어만 있는 경우 -->
	            <when test="searchText != '' and searchDate == ''">
	            where
	                WRITER_NAME LIKE '%' || #{searchText} || '%'
	                OR NOTICE_TITLE LIKE '%' || #{searchText} || '%'
	                OR START_DATE LIKE '%' || #{searchText} || '%'
	            </when>
	            
	            <!-- 기준일만 있는 경우 -->
	            <otherwise>
	                WHERE TO_CHAR(START_DATE, 'YY/MM') = TO_CHAR(TO_DATE(#{searchDate}, 'YYYY-MM-DD'), 'YY/MM')
	            </otherwise>
	        </choose>
	</sql>
	
	
	<!--  24-11-15 : 공지사항 등록 -->
	<insert id="insertNotice" parameterType="kr.co.wizbrain.tbn.notice.vo.NoticeVO">
		insert into notice_info(WRITER_ID,NOTICE_ID,WRITER_NAME,START_DATE,END_DATE,NOTICE_TITLE,NOTICE_CONTENT,NOTICE_TYPE)
		values(#{WRITER_ID},DBMS_RANDOM.STRING('X', 10),#{WRITER_NAME},SYSDATE,#{END_DATE},#{NOTICE_TITLE},#{NOTICE_CONTENT},#{NOTICE_TYPE})
	</insert>
	
	
	<!--  24-11-15 : 공지사항 상세 조회  -->
	<select id="detailNotice" resultType="kr.co.wizbrain.tbn.notice.vo.NoticeVO">
		select TO_CHAR(START_DATE, 'YYYY-MM-DD')AS START_DATE,TO_CHAR(END_DATE, 'YYYY-MM-DD') AS END_DATE,NOTICE_CONTENT,
			    NOTICE_ID,NOTICE_TITLE,NOTICE_TYPE,WRITER_ID,WRITER_NAME
		from notice_info
		where notice_id = #{noticeId}
	</select>
	
	<!-- 24-11-15 : 공지사항 수정  -->
	<update id="updateNotice" parameterType="kr.co.wizbrain.tbn.notice.vo.NoticeVO">
		update notice_info
		set END_DATE = #{END_DATE},
		NOTICE_TITLE = #{NOTICE_TITLE},
		NOTICE_CONTENT = #{NOTICE_CONTENT},
		NOTICE_TYPE = #{NOTICE_TYPE}
		where notice_id = #{NOTICE_ID}
	</update>
	
	<!--  24-11-15 : 공지사항 삭제 -->
	<delete id="deleteNotice">
		delete notice_info
		where notice_id = #{noticeId}
	</delete>
	
	<select id="selectNotice" resultType="kr.co.wizbrain.tbn.notice.vo.NoticeVO">
		<![CDATA[
		    SELECT * 
			FROM (
			    SELECT TO_CHAR(START_DATE, 'YYYY-MM-DD HH24:MI:SS')AS START_DATE,END_DATE,NOTICE_CONTENT,
			    NOTICE_ID,NOTICE_TITLE,NOTICE_TYPE,WRITER_ID,WRITER_NAME
			    FROM notice_info 
			    WHERE TRUNC(start_date) <= TO_DATE(#{today}, 'YY/MM/DD')
			    AND TRUNC(end_date) >= TO_DATE(#{today}, 'YY/MM/DD')
			    ORDER BY start_date DESC
			) 
			WHERE ROWNUM = 1
    	]]>
	</select>
	
	<select id="selectNoticeCnt" resultType="kr.co.wizbrain.tbn.notice.vo.NoticeVO">
			  <![CDATA[
			    SELECT TO_CHAR(START_DATE, 'YYYY-MM-DD HH24:MI:SS')AS START_DATE,END_DATE,NOTICE_CONTENT,
			    NOTICE_ID,NOTICE_TITLE,NOTICE_TYPE,WRITER_ID,WRITER_NAME
			    FROM notice_info 
			    WHERE TRUNC(start_date) <= TO_DATE(#{today}, 'YY/MM/DD')
			    AND TRUNC(end_date) >= TO_DATE(#{today}, 'YY/MM/DD')
			    ORDER BY start_date DESC ]]>
	</select>
	
	
	<!-- 25-02-11 : 공지사항을 등록하면, 등록된 공지사항의 ID를 가져온다. (첨부 파일 용)  -->
	<select id="selectEventId" resultType="java.lang.String">
		SELECT * FROM
		( SELECT NOTICE_ID FROM NOTICE_INFO
			ORDER BY START_DATE DESC
		)
		WHERE ROWNUM = 1
	</select>
	
	<!-- 25-02-11 : 첨부파일 등록 -->
	<insert id="insertFile">
		INSERT ALL
			<foreach collection="list" item="item" index="index" open="" close="" separator="">
				INTO NOTICE_FILE_INFO (FILE_ID, FILE_NAME, FILE_DIR, REG_DT, NOTICE_ID) VALUES(DBMS_RANDOM.STRING('X', 20), #{item.fileName}, #{item.fileDir}, SYSDATE, #{item.noticeId})
			</foreach>
		SELECT *
		FROM DUAL
	</insert>
	
	
	<!-- 파일 가져오기 -->
	<select id="getFileList" resultType="kr.co.wizbrain.tbn.notice.vo.NoticeVO">
		select *
		from notice_file_info
		where notice_id = #{noticeId}
	</select>
	
	
	<!-- 다운로드용 파일 정보 -->
	<select id="selectFileList" parameterType="kr.co.wizbrain.tbn.notice.vo.NoticeVO" resultType="kr.co.wizbrain.tbn.notice.vo.NoticeVO">
		select *
    	from notice_file_info
    	where file_id = #{FILE_ID}
	</select>
	
	
	
	<!-- 삭제 할 파일 조회 -->
	<select id="selectFileList2" parameterType="kr.co.wizbrain.tbn.notice.vo.NoticeVO" resultType="kr.co.wizbrain.tbn.notice.vo.NoticeVO">
    	select *
    	from notice_file_info
    	where notice_id = #{NOTICE_ID}
    </select>
    
    
    <!-- 파일 삭제 -->
    <delete id="deleteNFile">
    	delete from notice_file_info
    	where notice_id= #{noticeId}
    </delete>
    
    
    	<!-- 파일 일괄 삭제 - 파일 이름 찾기 -->
    <select id="selectFileName" resultType="java.lang.String">
    	select file_name
    	from notice_file_info
    	where file_id = #{fileId}
    </select>
    
    <!-- 파일 일괄 삭제 -->
    <delete id="deleteFileOne">
    	delete from notice_file_info
    	where file_id= #{fileId}
    </delete>
    
</mapper>